{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/boards/boards.component.html","./src/app/home/home.component.html","./src/app/login/login.component.html","./src/app/o-auth2-callback/o-auth2-callback.component.html","./src/app/ui/header/header.component.html","./src/app/ui/main-menu/main-menu.component.html","./src/app/user/user.component.html","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/boards/boards.component.scss","./src/app/boards/boards.component.ts","./src/app/home/home.component.scss","./src/app/home/home.component.ts","./src/app/login/login.component.scss","./src/app/login/login.component.ts","./src/app/material/material.module.ts","./src/app/o-auth2-callback/o-auth2-callback.component.scss","./src/app/o-auth2-callback/o-auth2-callback.component.ts","./src/app/services/pinterest.service.ts","./src/app/ui/header/header.component.scss","./src/app/ui/header/header.component.ts","./src/app/ui/main-menu/main-menu.component.scss","./src/app/ui/main-menu/main-menu.component.ts","./src/app/user/user.component.scss","./src/app/user/user.component.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","module.exports = \"<h1>Pastas</h1>\\n\\n<mat-accordion *ngIf=\\\"boards.length > 0\\\">\\n   <mat-expansion-panel *ngFor=\\\"let board of boards\\\" (opened)=\\\"fetchPins(board.name)\\\">\\n      <mat-expansion-panel-header>\\n\\n         <mat-panel-title>\\n            {{ board.name }}\\n         </mat-panel-title>\\n\\n      </mat-expansion-panel-header>\\n\\n      <mat-card *ngFor=\\\"let pin of boardPins[board.name]\\\" class=\\\"pin-preview\\\">\\n         <img mat-card-image [src]=\\\"pin.image.original.url\\\" [alt]=\\\"pin.note\\\">\\n         <mat-card-content>\\n           <p>\\n             {{ pin.note }}\\n           </p>\\n         </mat-card-content>         \\n       </mat-card>\\n\\n   </mat-expansion-panel>\\n</mat-accordion>\\n\\n<p *ngIf=\\\"boards.length <= 0\\\">Você não criou nenhuma pasta ainda.</p>\"","module.exports = \"<p>home works!</p>\\n\"","module.exports = \"<div>\\n   <button mat-button color=\\\"primary\\\" (click)=\\\"doLogin()\\\">\\n      Fazer login no Pinterest\\n   </button>\\n</div>\"","module.exports = \"<p>o-auth2-callback works!</p>\\n\"","module.exports = \"<mat-toolbar color=\\\"primary\\\" class=\\\"mat-elevation-z8\\\">\\n   <mat-toolbar-row>\\n      <app-main-menu></app-main-menu>\\n      <span>{{ appName }}</span>\\n   </mat-toolbar-row>\\n</mat-toolbar>\"","module.exports = \"<button mat-button [matMenuTriggerFor]=\\\"menu\\\" #state=\\\"matMenuTrigger\\\">\\n   <mat-icon *ngIf=\\\"! state.menuOpen\\\">menu</mat-icon>\\n   <mat-icon *ngIf=\\\"state.menuOpen\\\">close</mat-icon>\\n</button>\\n<mat-menu #menu=\\\"matMenu\\\">\\n   <a *ngIf=\\\"hasUser()\\\" mat-menu-item [routerLink]=\\\"['/user']\\\">Perfil</a>\\n   <a *ngIf=\\\"hasUser()\\\" mat-menu-item [routerLink]=\\\"['/boards']\\\">Pastas</a>\\n   <a *ngIf=\\\"! hasUser()\\\" mat-menu-item [routerLink]=\\\"['/login']\\\">Entrar</a>\\n   <button *ngIf=\\\"hasUser()\\\" mat-menu-item (click)=\\\"logOff()\\\">Sair</button>   \\n</mat-menu>\"","module.exports = \"<div class=\\\"container\\\">\\n  <mat-card class=\\\"example-card\\\">\\n    <mat-card-header>\\n      <div mat-card-avatar>\\n        <img mat-card-image [src]=\\\"avatarImage\\\" [alt]=\\\"avatarAlt\\\">\\n      </div>\\n      <mat-card-title>{{ user.username }}</mat-card-title>\\n      <mat-card-subtitle>{{ user.first_name }} {{ user.last_name }}</mat-card-subtitle>\\n    </mat-card-header>\\n    <mat-card-content>\\n      <p>{{ user.bio }}</p>\\n    </mat-card-content>\\n    <mat-card-actions>\\n      <button mat-raised-button color=\\\"primary\\\" (click)=\\\"doLogoff()\\\">Sair</button>\\n    </mat-card-actions>\\n  </mat-card>\\n</div>\\n\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './login/login.component';\nimport { HomeComponent } from './home/home.component';\nimport { OAuth2CallbackComponent } from './o-auth2-callback/o-auth2-callback.component';\nimport { UserComponent } from './user/user.component';\nimport { BoardsComponent } from './boards/boards.component';\n\nconst routes: Routes = [\n  { path: '', component: LoginComponent },\n  { path: 'login', component: LoginComponent },\n  { path: 'user', component: UserComponent },\n  { path: 'boards', component: BoardsComponent },\n  { path: 'oauth2/callback', component: OAuth2CallbackComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  template: `\n    <app-header [appName]=\"title\"></app-header>\n    <router-outlet></router-outlet>\n  `,\n  styles: []\n})\nexport class AppComponent {\n  title = 'Pinupload';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { HttpClientJsonpModule } from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MaterialModule } from './material/material.module';\nimport { LoginComponent } from './login/login.component';\nimport { OAuth2CallbackComponent } from './o-auth2-callback/o-auth2-callback.component';\nimport { HomeComponent } from './home/home.component';\nimport { UserComponent } from './user/user.component';\nimport { HeaderComponent } from './ui/header/header.component';\nimport { MainMenuComponent } from './ui/main-menu/main-menu.component';\nimport { BoardsComponent } from './boards/boards.component';\nimport { ServiceWorkerModule } from '@angular/service-worker';\nimport { environment } from '../environments/environment';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    OAuth2CallbackComponent,\n    HomeComponent,\n    UserComponent,\n    HeaderComponent,\n    MainMenuComponent,\n    BoardsComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    HttpClientJsonpModule,    \n    BrowserAnimationsModule,\n    MaterialModule,\n    ServiceWorkerModule.register('ngsw-worker.js', { enabled: environment.production })\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2JvYXJkcy9ib2FyZHMuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { PinterestService } from '../services/pinterest.service';\n\n@Component({\n  selector: 'app-boards',\n  templateUrl: './boards.component.html',\n  styleUrls: ['./boards.component.scss']\n})\nexport class BoardsComponent implements OnInit {\n\n  constructor(private pinterest: PinterestService) { }\n\n  boards: any = [];\n  boardPins: any = {};\n\n  async ngOnInit() {\n    try {\n      let result = await this.pinterest.listBoards();\n      this.boards = result['data'];\n      console.log(this.boards);\n    }\n    catch(error) {\n      console.error(error);\n    }\n  }\n\n  async fetchPins(boardName: string) {\n    console.log(this.boardPins[boardName]);\n    // Se ainda não houver carregado a lista de imagens do board\n    if(! this.boardPins[boardName]) {\n      try {\n        let result = await this.pinterest.listBoardPins(boardName);\n        this.boardPins[boardName] = result['data'];\n        console.log(result);\n      }\n      catch(error) {\n        console.log(error);\n      }\n    }\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2hvbWUvaG9tZS5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"div {\\n  text-align: center;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbG9naW4vQzpcXFVzZXJzXFwxMDkwNDgxNzEzMDE0XFxEZXNrdG9wXFxOb3ZhIHBhc3RhXFxwaW51cGxvYWQvc3JjXFxhcHBcXGxvZ2luXFxsb2dpbi5jb21wb25lbnQuc2NzcyIsInNyYy9hcHAvbG9naW4vbG9naW4uY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRyxrQkFBQTtBQ0NIIiwiZmlsZSI6InNyYy9hcHAvbG9naW4vbG9naW4uY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJkaXYge1xuICAgdGV4dC1hbGlnbjogY2VudGVyO1xufSIsImRpdiB7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbn0iXX0= */\"","import { Component, OnInit } from '@angular/core';\nimport { PinterestService } from '../services/pinterest.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n\n  constructor(\n    private pinterest: PinterestService,\n    private router: Router\n  ) { }\n\n  ngOnInit() {\n    // Já tem usuário logado, não precisa fazer login\n    if(this.pinterest.getUser()) {\n      this.router.navigate(['user']);\n    }    \n  }\n\n  doLogin() {\n    this.pinterest.initLogin();    \n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CdkTableModule } from '@angular/cdk/table';\nimport { CdkTreeModule } from '@angular/cdk/tree';\nimport {\n  MatAutocompleteModule,\n  MatBadgeModule,\n  MatBottomSheetModule,\n  MatButtonModule,\n  MatButtonToggleModule,\n  MatCardModule,\n  MatCheckboxModule,\n  MatChipsModule,\n  MatDatepickerModule,\n  MatDialogModule,\n  MatDividerModule,\n  MatExpansionModule,\n  MatGridListModule,\n  MatIconModule,\n  MatInputModule,\n  MatListModule,\n  MatMenuModule,\n  MatNativeDateModule,\n  MatPaginatorModule,\n  MatProgressBarModule,\n  MatProgressSpinnerModule,\n  MatRadioModule,\n  MatRippleModule,\n  MatSelectModule,\n  MatSidenavModule,\n  MatSliderModule,\n  MatSlideToggleModule,\n  MatSnackBarModule,\n  MatSortModule,\n  MatStepperModule,\n  MatTableModule,\n  MatTabsModule,\n  MatToolbarModule,\n  MatTooltipModule,\n  MatTreeModule,\n} from '@angular/material';\n@NgModule({\n  exports: [\n    CdkTableModule,\n    CdkTreeModule,\n    MatAutocompleteModule,\n    MatBadgeModule,\n    MatBottomSheetModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatStepperModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    MatTreeModule,\n  ]\n})\nexport class MaterialModule { }","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL28tYXV0aDItY2FsbGJhY2svby1hdXRoMi1jYWxsYmFjay5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { PinterestService } from '../services/pinterest.service';\n\n@Component({\n  selector: 'app-o-auth2-callback',\n  templateUrl: './o-auth2-callback.component.html',\n  styleUrls: ['./o-auth2-callback.component.scss']\n})\nexport class OAuth2CallbackComponent implements OnInit {\n\n  constructor(\n    private router: Router,\n    private route: ActivatedRoute,\n    private pinterest: PinterestService\n  ) { }\n\n  ngOnInit() {\n    this.route.queryParams.subscribe(\n      params => {\n        if(params.code) { // Se existir o parâmetro chamado 'code'\n          console.log('Access code:');\n          console.log(params.code);\n          // Salva o access code para uso posterior\n          this.pinterest.setAccessCode(params.code);\n          // Retorna à página inicial\n          //this.router.navigate(['/']); \n        }\n        else {\n          console.error('ERRO DE ACCESS CODE');\n          // Deu erro no login; retornamos à página de login\n          // this.router.navigate(['/login']);          \n        }\n      }\n    ); \n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams, HttpHeaders } from '@angular/common/http';\nimport { environment } from '../../environments/environment';\nimport { Router } from '@angular/router';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PinterestService {\n\n  private env = environment;\n  \n  private reqHeaders : HttpHeaders;\n\n  constructor(\n    private http: HttpClient,\n    private router: Router\n  ) { \n    this.reqHeaders = new HttpHeaders()\n      .set('Content-Type', 'application/json')\n      .set('Access-Control-Allow-Origin', 'https://' + window.location.hostname)\n      .set('Access-Control-Allow-Credentials', 'true')\n      .set('Access-Control-Allow-Methods', 'GET, POST, PATCH, DELETE, PUT, OPTIONS')\n      //.set('Access-Control-Request-Headers', 'Authorization, X-PING')\n      .set('Access-Control-Allow-Headers', 'Content-Type, Authorization, Access-Control-Allow-Headers, X-Requested-With, X-PING');\n  }\n\n  /* accessCode e accessToken podem ser string ou null */\n  private accessCode: string|null = null;\n  //private accessToken : string|null = null;\n\n  //private loggedInUser : any = null;\n\n  initLogin() {\n\n    // Só inicia o login caso não existam o access code e o acess token\n    if(this.accessCode && sessionStorage.getItem('accessToken')) {\n      this.router.navigate(['/']); // Volta para a página inicial\n      return;\n    }\n\n    const params = new HttpParams()\n      .set('response_type', 'code')\n      .set('client_id', this.env.clientId)\n      .set('scope', 'read_public,write_public')\n      .set('redirect_uri', this.env.redirectUri);\n\n    // Redireciona para o site do Pinterest para fazer login\n    window.location.href = this.env.authUrl + '?' + params.toString();\n\n  }\n\n  setAccessCode(accessCode: string) {\n    this.accessCode = accessCode;\n    this.getAccessToken();    \n  }\n\n  getLoggedInUser() {\n\n    // Somente procede à chamada de API se existir um access token\n    if(! sessionStorage.getItem('accessToken')) {\n      this.logOff(); // Log off forçado;\n      return;\n    }\n\n    const endPoint = 'me/';\n    const params = new HttpParams()\n      .set('access_token', sessionStorage.getItem('accessToken'))\n      .set('fields', 'id,username,first_name,last_name,bio,image');\n\n    this.http.get(this.env.apiUri + endPoint, {params: params}).subscribe (\n      user => {\n        // JSON.stringify(): converte JSON para string\n        sessionStorage.setItem('user', JSON.stringify(user['data']));\n        console.log(user);\n        this.router.navigate(['user']);\n      },\n      error => {\n        console.error(error);\n      }\n    );\n  }\n\n  getUser() {\n    let user = sessionStorage.getItem('user');\n    if(user) {\n      // JSON.parse(): converte string em JSON\n      return JSON.parse(user);\n    }\n    else {\n      return null;\n    }\n  }\n\n  private getAccessToken() {\n    const params = new HttpParams()\n      .set('grant_type', 'authorization_code')\n      .set('client_id', this.env.clientId)\n      .set('client_secret', this.env.clientSecret)\n      .set('code', this.accessCode);\n\n      this.http.post(this.env.tokenUri, null, {params: params}).subscribe(\n        res => {\n          console.log('--TOKEN--');\n          sessionStorage.setItem('accessToken', res['access_token']);\n          console.log(sessionStorage.getItem('accessToken'));\n          this.getLoggedInUser();\n          //this.router.navigate(['/']);\n        },\n        error => {\n          console.error('ERRO DE TOKEN');\n          console.error(error);\n          //this.router.navigate(['/login']);\n        }\n      );\n    \n  }\n  \n  logOff() {\n    this.accessCode = null;\n    sessionStorage.removeItem('accessToken');\n    sessionStorage.removeItem('user');\n    this.router.navigate(['login']);\n  }\n\n  listBoards() {\n\n    // Somente procede à chamada de API se existir um access token\n    if(! sessionStorage.getItem('accessToken')) {\n      this.logOff(); // Log off forçado;\n      return;\n    }\n\n    const endPoint = 'me/boards';\n    const params = new HttpParams()\n      .set('access_token', sessionStorage.getItem('accessToken'))\n      .set('scope', 'read_public');\n    \n    let fullUri = this.env.apiUri + endPoint + '?' + params.toString();\n\n    return this.http.jsonp(fullUri, 'callback').toPromise();\n\n  }\n\n  listBoardPins(boardName: string) {\n\n    // Somente procede à chamada de API se existir um access token\n    if(! sessionStorage.getItem('accessToken')) {\n      this.logOff(); // Log off forçado;\n      return;\n    }\n\n    const endPoint = `boards/${this.getUser()['username']}/${boardName}/pins`;\n    const params = new HttpParams()\n      .set('access_token', sessionStorage.getItem('accessToken'))\n      .set('fields', 'id,url,note,image')\n      .set('scope', 'read_public');\n\n    let fullUri = this.env.apiUri + endPoint + '?' + params.toString();\n\n    console.log(fullUri);\n\n    return this.http.jsonp(fullUri, 'callback').toPromise();\n\n  }\n\n  public isLoggedIn() {\n    return sessionStorage.getItem('accessToken') != null;\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VpL2hlYWRlci9oZWFkZXIuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent implements OnInit {\n\n  @Input() appName : string;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VpL21haW4tbWVudS9tYWluLW1lbnUuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { PinterestService } from '../../services/pinterest.service';\n\n@Component({\n  selector: 'app-main-menu',\n  templateUrl: './main-menu.component.html',\n  styleUrls: ['./main-menu.component.scss']\n})\nexport class MainMenuComponent implements OnInit {\n\n  constructor(\n    private pinterest: PinterestService\n  ) { }\n\n  ngOnInit() {\n  }\n\n  logOff() {\n    this.pinterest.logOff();\n  }\n\n  hasUser() {\n    return this.pinterest.getUser();\n  }\n\n}\n","module.exports = \".mat-card-image {\\n  height: 60px;\\n  width: 60px;\\n  border-radius: 50%;\\n}\\n\\n.example-card {\\n  max-width: 400px;\\n  margin: 0 auto;\\n}\\n\\n.example-header-image {\\n  background-size: cover;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdXNlci9DOlxcVXNlcnNcXDEwOTA0ODE3MTMwMTRcXERlc2t0b3BcXE5vdmEgcGFzdGFcXHBpbnVwbG9hZC9zcmNcXGFwcFxcdXNlclxcdXNlci5jb21wb25lbnQuc2NzcyIsInNyYy9hcHAvdXNlci91c2VyLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsWUFBQTtFQUNBLFdBQUE7RUFDQSxrQkFBQTtBQ0NGOztBREVBO0VBQ0UsZ0JBQUE7RUFDQSxjQUFBO0FDQ0Y7O0FERUE7RUFDRSxzQkFBQTtBQ0NGIiwiZmlsZSI6InNyYy9hcHAvdXNlci91c2VyLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLm1hdC1jYXJkLWltYWdlIHtcbiAgaGVpZ2h0OiA2MHB4O1xuICB3aWR0aDogNjBweDtcbiAgYm9yZGVyLXJhZGl1czogNTAlO1xufVxuXG4uZXhhbXBsZS1jYXJkIHtcbiAgbWF4LXdpZHRoOiA0MDBweDtcbiAgbWFyZ2luOiAwIGF1dG87XG59XG4gXG4uZXhhbXBsZS1oZWFkZXItaW1hZ2Uge1xuICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xufSIsIi5tYXQtY2FyZC1pbWFnZSB7XG4gIGhlaWdodDogNjBweDtcbiAgd2lkdGg6IDYwcHg7XG4gIGJvcmRlci1yYWRpdXM6IDUwJTtcbn1cblxuLmV4YW1wbGUtY2FyZCB7XG4gIG1heC13aWR0aDogNDAwcHg7XG4gIG1hcmdpbjogMCBhdXRvO1xufVxuXG4uZXhhbXBsZS1oZWFkZXItaW1hZ2Uge1xuICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xufSJdfQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { PinterestService } from '../services/pinterest.service';\n\n@Component({\n  selector: 'app-user',\n  templateUrl: './user.component.html',\n  styleUrls: ['./user.component.scss']\n})\nexport class UserComponent implements OnInit {\n\n  user : any;\n  avatarImage: string = '';\n  avatarAlt: string = '';\n\n  constructor(\n    private pinterest: PinterestService\n  ) { }\n\n  ngOnInit() {\n    // Busca os dados dos usuário no service\n    this.user = this.pinterest.getUser();\n\n    // Se existir a imagem 60x60\n    if (this.user.image['60x60']) {\n      this.avatarImage = this.user.image['60x60'].url;\n      this.avatarAlt = `Foto de ${this.user.first_name} ${this.user.last_name}`;\n    }\n  }\n\n  doLogoff() {\n    this.pinterest.logOff();\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n    production: false,\r\n    authUrl: 'https://api.pinterest.com/oauth/',\r\n    redirectUri: 'https://ovatsug0705.github.io/pinupload/oauth2/callback',\r\n    clientId: '5048714420883072404',\r\n    tokenUri: 'https://api.pinterest.com/v1/oauth/token',\r\n    apiUri: 'https://api.pinterest.com/v1/',\r\n    clientSecret: 'd4346c7bb1c10673e46d6316f069c86916c363f65dc9e372d92f7b1048796011',\r\n  };\r\n  \r\n  /*\r\n   * For easier debugging in development mode, you can import the following file\r\n   * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n   *\r\n   * This import should be commented out in production mode because it will have a negative impact\r\n   * on performance if an error is thrown.\r\n   */\r\n  // import 'zone.js/dist/zone-error';  // Included with Angular CLI.","import 'hammerjs';\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}